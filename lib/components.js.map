{"version":3,"sources":["../src/components.js"],"names":["LayerStackMountPoint","namespace","store","dispatch","renderFn","views","displaying","show","hide","length","map","index","Layer","createClass","componentWillMount","props","register","id","shouldComponentUpdate","newProps","use","needUpdate","toString","i","JSON","stringify","componentWillUnmount","render","LayerToggle"],"mappings":"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","file":"components.js","sourcesContent":["import React, { PropTypes } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { ACTIONS } from './reducer'\n\nexport const LayerStackMountPoint = (namespace = 'layer_stack') => connect(\n  (store) => store[namespace],\n  dispatch => bindActionCreators(ACTIONS, dispatch)\n)(({ renderFn, // from props\n  views, displaying, show, hide}) => { // from redux\n  return (\n    <div> { renderFn ? renderFn({views, displaying, show, hide})\n      : (displaying.length ? displaying.map (\n      (index) => <div key={index}>{ views[index]({index, show, hide, displaying, views}) }</div>\n    )\n      : <noscript />) }\n    </div>\n  )\n});\n\nexport const Layer = (namespace = 'layer_stack') => connect(\n  (store) => store[namespace],\n  dispatch => bindActionCreators(ACTIONS, dispatch)\n)((React.createClass({\n  componentWillMount() {\n    this.props.register(this.props.id, this.props.renderFn);\n  },\n  shouldComponentUpdate(newProps) {\n    const { use, renderFn, register, id } = this.props;\n    let needUpdate = false;\n    if (id !== newProps.id) {\n      needUpdate = true;\n    }\n    else if (renderFn.toString() !== newProps.renderFn.toString()) {\n      needUpdate = true;\n    }\n    else if (use) {\n      if (use.length !== newProps.use.length) {\n        needUpdate = true;\n      } else {\n        let i = use.length;\n        while (i--) {\n          if (JSON.stringify(use[i]) !== JSON.stringify(newProps.use[i])) {\n            needUpdate = true;\n          }\n        }\n      }\n    }\n\n    if (needUpdate) {\n      register(newProps.id, newProps.renderFn);\n      return true;\n    }\n    return false;\n  },\n\n  componentWillUnmount() {\n    // TODO: garbage collection\n    // this.props.unregister(this.props.id)\n  },\n\n  render() {\n    return <noscript />\n  }\n})));\n\nexport const LayerToggle = (namespace = 'layer_stack') => connect(\n  (store) => store[namespace],\n  dispatch => bindActionCreators(ACTIONS, dispatch)\n)(({ renderFn, // from props\n  displaying, show, hide, // from redux\n}) => {\n  return renderFn({ show, hide, displaying });\n});"]}