{"version":3,"sources":["../src/components.js"],"names":["React","PropTypes","connect","bindActionCreators","ACTIONS","LayerStackMountPoint","namespace","store","dispatch","renderFn","views","displaying","show","hide","length","map","index","Layer","createClass","componentWillMount","props","register","id","shouldComponentUpdate","newProps","use","needUpdate","toString","i","JSON","stringify","componentWillUnmount","render","LayerToggle"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,OAAO,MAAMC,uBAAuB,CAACC,YAAY,aAAb,KAA+BJ;AAChEK,KAAD,IAAWA,MAAMD,SAAN,CADsD;AAEjEE,YAAYL,mBAAmBC,OAAnB,EAA4BI,QAA5B,CAFqD;AAGjE,CAAC,EAAEC,QAAF,EAAY;AACbC,OADC,EACMC,UADN,EACkBC,IADlB,EACwBC,IADxB,EAAD,KACmC,CAAE;AACrC;AACE,0CAAQJ,WAAWA,SAAS,EAACC,KAAD,EAAQC,UAAR,EAAoBC,IAApB,EAA0BC,IAA1B,EAAT,CAAX;AACHF,iBAAWG,MAAX,GAAoBH,WAAWI,GAAX;AACtBC,WAAD,IAAW,6BAAK,KAAKA,KAAV,IAAmBN,MAAMM,KAAN,EAAa,EAACA,KAAD,EAAQJ,IAAR,EAAcC,IAAd,EAAoBF,UAApB,EAAgCD,KAAhC,EAAb,CAAnB,CADY,CAApB;;AAGD,2CAJJ,CADF;;;AAQD,CAbkE,CAA5D;;AAeP,OAAO,MAAMO,QAAQ,CAACX,YAAY,aAAb,KAA+BJ;AACjDK,KAAD,IAAWA,MAAMD,SAAN,CADuC;AAElDE,YAAYL,mBAAmBC,OAAnB,EAA4BI,QAA5B,CAFsC;AAGjDR,MAAMkB,WAAN,CAAkB;AACnBC,uBAAqB;AACnB,SAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKD,KAAL,CAAWE,EAA/B,EAAmC,KAAKF,KAAL,CAAWX,QAA9C;AACD,GAHkB;AAInBc,wBAAsBC,QAAtB,EAAgC;AAC9B,UAAM,EAAEC,GAAF,EAAOhB,QAAP,EAAiBY,QAAjB,EAA2BC,EAA3B,KAAkC,KAAKF,KAA7C;AACA,QAAIM,aAAa,KAAjB;AACA,QAAIJ,OAAOE,SAASF,EAApB,EAAwB;AACtBI,mBAAa,IAAb;AACD,KAFD;AAGK,QAAIjB,SAASkB,QAAT,OAAwBH,SAASf,QAAT,CAAkBkB,QAAlB,EAA5B,EAA0D;AAC7DD,mBAAa,IAAb;AACD,KAFI;AAGA,QAAID,GAAJ,EAAS;AACZ,UAAIA,IAAIX,MAAJ,KAAeU,SAASC,GAAT,CAAaX,MAAhC,EAAwC;AACtCY,qBAAa,IAAb;AACD,OAFD,MAEO;AACL,YAAIE,IAAIH,IAAIX,MAAZ;AACA,eAAOc,GAAP,EAAY;AACV,cAAIC,KAAKC,SAAL,CAAeL,IAAIG,CAAJ,CAAf,MAA2BC,KAAKC,SAAL,CAAeN,SAASC,GAAT,CAAaG,CAAb,CAAf,CAA/B,EAAgE;AAC9DF,yBAAa,IAAb;AACD;AACF;AACF;AACF;;AAED,QAAIA,UAAJ,EAAgB;AACdL,eAASG,SAASF,EAAlB,EAAsBE,SAASf,QAA/B;AACA,aAAO,IAAP;AACD;AACD,WAAO,KAAP;AACD,GA/BkB;;AAiCnBsB,yBAAuB;AACrB;AACA;AACD,GApCkB;;AAsCnBC,WAAS;AACP,WAAO,qCAAP;AACD,GAxCkB,EAAlB,CAHiD,CAA7C;;;AA8CP,OAAO,MAAMC,cAAc,CAAC3B,YAAY,aAAb,KAA+BJ;AACvDK,KAAD,IAAWA,MAAMD,SAAN,CAD6C;AAExDE,YAAYL,mBAAmBC,OAAnB,EAA4BI,QAA5B,CAF4C;AAGxD,CAAC,EAAEC,QAAF,EAAY;AACbE,YADC,EACWC,IADX,EACiBC,IADjB,EAAD;AAEI;AACJ,SAAOJ,SAAS,EAAEG,IAAF,EAAQC,IAAR,EAAcF,UAAd,EAAT,CAAP;AACD,CAPyD,CAAnD","file":"components.js","sourcesContent":["import React, { PropTypes } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { ACTIONS } from './reducer'\n\nexport const LayerStackMountPoint = (namespace = 'layer_stack') => connect(\n  (store) => store[namespace],\n  dispatch => bindActionCreators(ACTIONS, dispatch)\n)(({ renderFn, // from props\n  views, displaying, show, hide}) => { // from redux\n  return (\n    <div> { renderFn ? renderFn({views, displaying, show, hide})\n      : (displaying.length ? displaying.map (\n      (index) => <div key={index}>{ views[index]({index, show, hide, displaying, views}) }</div>\n    )\n      : <noscript />) }\n    </div>\n  )\n});\n\nexport const Layer = (namespace = 'layer_stack') => connect(\n  (store) => store[namespace],\n  dispatch => bindActionCreators(ACTIONS, dispatch)\n)((React.createClass({\n  componentWillMount() {\n    this.props.register(this.props.id, this.props.renderFn);\n  },\n  shouldComponentUpdate(newProps) {\n    const { use, renderFn, register, id } = this.props;\n    let needUpdate = false;\n    if (id !== newProps.id) {\n      needUpdate = true;\n    }\n    else if (renderFn.toString() !== newProps.renderFn.toString()) {\n      needUpdate = true;\n    }\n    else if (use) {\n      if (use.length !== newProps.use.length) {\n        needUpdate = true;\n      } else {\n        let i = use.length;\n        while (i--) {\n          if (JSON.stringify(use[i]) !== JSON.stringify(newProps.use[i])) {\n            needUpdate = true;\n          }\n        }\n      }\n    }\n\n    if (needUpdate) {\n      register(newProps.id, newProps.renderFn);\n      return true;\n    }\n    return false;\n  },\n\n  componentWillUnmount() {\n    // TODO: garbage collection\n    // this.props.unregister(this.props.id)\n  },\n\n  render() {\n    return <noscript />\n  }\n})));\n\nexport const LayerToggle = (namespace = 'layer_stack') => connect(\n  (store) => store[namespace],\n  dispatch => bindActionCreators(ACTIONS, dispatch)\n)(({ renderFn, // from props\n  displaying, show, hide, // from redux\n}) => {\n  return renderFn({ show, hide, displaying });\n});"]}