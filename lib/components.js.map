{"version":3,"sources":["../src/components.js"],"names":["LayerStackMountPoint","namespace","store","dispatch","renderFn","mountPointArgs","args","views","displaying","show","hide","hideAll","length","map","id","index","showOnlyMe","hideMe","showMe","Error","Layer","createClass","componentWillMount","props","register","children","showInitially","defaultArgs","shouldComponentUpdate","newProps","use","needUpdate","toString","i","JSON","stringify","componentWillUnmount","render","LayerContext","isActive","indexOf"],"mappings":"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","file":"components.js","sourcesContent":["import React, { PropTypes } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { ACTIONS } from './reducer'\n\nexport const LayerStackMountPoint = (namespace = 'layer_stack') => connect(\n  (store) => store[namespace],\n  dispatch => bindActionCreators(ACTIONS, dispatch)\n)(({ renderFn, args: mountPointArgs, views, displaying, show, hide, hideAll}) => { // from store\n  return (\n    <div> { renderFn ? renderFn({views, displaying, show, hide, hideAll}) // it's possible to provide alternative renderFn for the MountPoint\n      : (displaying.length ? displaying.map ((id, index) => // if no alternative renderFn provided we'll use the default one\n          <div key={id}>\n            {(() => {\n              if (views[id] && views[id].renderFn) {\n                return views[id].renderFn({ // TODO: check that renderFn is a function\n                  index, id, show, hide, hideAll, displaying, views, mountPointArgs,\n                  showOnlyMe: (...args) => hideAll() || show(id, ...args), // TODO: improve\n                  hideMe: () => hide(id),\n                  showMe: (...args) => show(id, ...args) // sometimes you may want to change args of the current layer\n                }, ...views[id].args)\n              }\n              if (typeof views[id] === 'undefined' || typeof views[id].renderFn === 'undefined') {\n                throw new Error(`\nIt seems like you're using LayerContext with id=\"${ id }\" but corresponding Layer isn't declared in the current Components tree.\nMake sure that Layer with id=\"${ id }\" is rendered into the current tree.\n`)\n              }})()}\n          </div>) : <noscript />)}\n    </div>\n  )\n});\n\nexport const Layer = (namespace = 'layer_stack') => connect(\n  (store) => store[namespace],\n  dispatch => bindActionCreators(ACTIONS, dispatch)\n)((React.createClass({\n  componentWillMount() {\n    this.props.register(this.props.id, this.props.children);\n    if (this.props.showInitially) {\n      this.props.show(this.props.id, this.props.defaultArgs || [])\n    }\n  },\n  shouldComponentUpdate(newProps) {\n    const { use, children, register, id } = this.props;\n    let needUpdate = false;\n    if (id !== newProps.id) {\n      needUpdate = true;\n    }\n    else if (children.toString() !== newProps.children.toString()) {\n      needUpdate = true;\n    }\n    else if (use) {\n      if (use.length !== newProps.use.length) {\n        needUpdate = true;\n      } else {\n        let i = use.length;\n        while (i--) {\n          if (JSON.stringify(use[i]) !== JSON.stringify(newProps.use[i])) {\n            needUpdate = true;\n          }\n        }\n      }\n    }\n\n    if (needUpdate) {\n      register(newProps.id, newProps.children);\n      return true;\n    }\n    return false;\n  },\n\n  componentWillUnmount() {\n    // TODO: garbage collection\n    // this.props.unregister(this.props.id)\n  },\n\n  render() {\n    return <noscript />\n  }\n})));\n\nexport const LayerContext = (namespace = 'layer_stack') => connect(\n  (store) => store[namespace],\n  dispatch => bindActionCreators(ACTIONS, dispatch)\n)(({ children, id, // from props\n  displaying, show, hide, hideAll, views // from store\n}) => {\n  return children({\n    show, hide, hideAll, displaying, views,\n    isActive: displaying.indexOf(id) !== -1,\n    showMe: (...args) => show(id, ...args),\n    showOnlyMe: (...args) => hideAll() || show(id, ...args),\n    hideMe: () => hide(id),\n  });\n});"]}