{"version":3,"sources":["../src/reducer.js"],"names":["ACTIONS","register","id","renderFn","unregister","toggle","show","hide","views","state","payload","displaying","newDisplaying","index","indexOf","splice"],"mappings":"8VAAA,6C;;;AAGO,IAAMA,4BAAU;AACrBC,YAAU,gCAAa,2BAAb,EAA0C,UAACC,EAAD,EAAKC,QAAL,UAAmB,EAAED,MAAF,EAAMC,kBAAN,EAAnB,EAA1C,CADW;AAErBC,cAAY,gCAAa,6BAAb,EAA4C,UAACF,EAAD,UAAS,EAAEA,MAAF,EAAT,EAA5C,CAFS;AAGrBG,UAAQ,gCAAa,yBAAb,CAHa;AAIrBC,QAAM,gCAAa,uBAAb,CAJe;AAKrBC,QAAM,gCAAa,uBAAb,CALe,EAAhB,C;;;AAQQ,iCAAc;AAC3B,+BAA6B,gDAAsD,KAApDC,KAAoD,QAApDA,KAAoD,KAA1CC,KAA0C,uEAAhCC,OAAgC,KAArBR,EAAqB,iBAArBA,EAAqB,KAAjBC,QAAiB,iBAAjBA,QAAiB;AACjFK,yBAAYA,KAAZ,sBAAoBN,EAApB,EAAyBC,QAAzB;AACA,wBAAWM,KAAX,IAAkBD,YAAlB;AACD,GAJ0B;AAK3B,iCAA+B,mDAA4C,KAA1CA,KAA0C,SAA1CA,KAA0C,KAAhCC,KAAgC,kDAAXP,EAAW,SAAtBQ,OAAsB,CAAXR,EAAW;AACzE,WAAOM,MAAMN,EAAN,CAAP,CADyE,CACvD;AAClB,wBAAWO,KAAX,IAAkBD,OAAOA,KAAzB;AACD,GAR0B;AAS3B,2BAAyB,6CAA4C,KAA1CG,UAA0C,SAA1CA,UAA0C,KAA3BF,KAA2B,uDAARP,EAAQ,SAAjBQ,OAAiB;AACnE,wBAAWD,KAAX,IAAkBE,yCAAgBA,UAAhB,IAA4BT,EAA5B,EAAlB;AACD,GAX0B;AAY3B,2BAAyB,6CAA6C,KAAxCO,KAAwC,2CAAjCE,UAAiC,SAAjCA,UAAiC,KAATT,EAAS,SAAlBQ,OAAkB;AACpE,QAAI,OAAOR,EAAP,KAAc,QAAlB,EAA4B;AAC1B,0BAAWO,KAAX,IAAkBE,YAAY,EAA9B;AACD;AACD,QAAMC,6CAAoBD,UAApB,EAAN;AACA,QAAME,QAAQD,cAAcE,OAAd,CAAsBZ,EAAtB,CAAd;AACA,QAAIW,UAAU,CAAC,CAAf,EAAkB;AAChBD,oBAAcG,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AACA,0BAAWJ,KAAX,IAAkBE,YAAYC,aAA9B;AACD;AACD,WAAOH,KAAP;AACD,GAvB0B,EAAd;AAwBZ;AACDE,cAAY,EADX;AAECH,SAAO,EAFR,EAxBY,C","file":"reducer.js","sourcesContent":["import { handleActions } from 'redux-actions'\nimport { createAction } from 'redux-actions'\n\nexport const ACTIONS = {\n  register: createAction('LAYER_STACK_VIEW_REGISTER', (id, renderFn) => ({ id, renderFn })),\n  unregister: createAction('LAYER_STACK_VIEW_UNREGISTER', (id) => ({ id })),\n  toggle: createAction('LAYER_STACK_VIEW_TOGGLE'),\n  show: createAction('LAYER_STACK_VIEW_SHOW'),\n  hide: createAction('LAYER_STACK_VIEW_HIDE'),\n};\n\nexport default handleActions({\n  'LAYER_STACK_VIEW_REGISTER': ({views, ...state}, { payload: { id, renderFn } }) => {\n    views = {...views, [id]: renderFn };\n    return {...state, views};\n  },\n  'LAYER_STACK_VIEW_UNREGISTER': ({views, ...state}, { payload: { id } }) => {\n    delete views[id]; // mutable for better GC\n    return {...state, views: views};\n  },\n  'LAYER_STACK_VIEW_SHOW': ({displaying, ...state}, { payload: id}) => {\n    return {...state, displaying: [...displaying, id] };\n  },\n  'LAYER_STACK_VIEW_HIDE': ({...state, displaying}, { payload: id }) => {\n    if (typeof id !== 'string') {\n      return {...state, displaying: [] };\n    }\n    const newDisplaying = [...displaying];\n    const index = newDisplaying.indexOf(id);\n    if (index !== -1) {\n      newDisplaying.splice(index, 1);\n      return {...state, displaying: newDisplaying };\n    }\n    return state;\n  },\n}, {\n  displaying: [],\n    views: {},\n});"]}