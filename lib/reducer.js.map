{"version":3,"sources":["../src/reducer.js"],"names":[],"mappings":"uPAAA,SAAS,aAAT,QAA8B,eAA9B;AACA,SAAS,YAAT,QAA6B,eAA7B;;AAEA,OAAO,MAAM,UAAU;AACrB,YAAU,aAAa,2BAAb,EAA0C,CAAC,EAAD,EAAK,QAAL,MAAmB,EAAE,EAAF,EAAM,QAAN,GAAnB,CAApD;AACA,cAAY,aAAa,6BAAb,EAA4C,OAAS,EAAE,EAAF,GAAT,CAAxD;AACA,UAAQ,aAAa,yBAAb,CAAR;AACA,QAAM,aAAa,uBAAb,CAAN;AACA,QAAM,aAAa,uBAAb,CAAN,EALW,CAAb;;;AAQA,eAAe,cAAc;AAC3B,+BAA6B,CAAC,EAAC,KAAD,EAAQ,GAAG,KAAH,EAAT,EAAoB,EAAE,SAAS,EAAE,EAAF,EAAM,QAAN,EAAT,EAAtB,KAAsD;AACjF,yBAAY,SAAO,CAAC,EAAD,GAAM,QAAN,GAAnB,CADiF;AAEjF,wBAAW,SAAO,QAAlB,CAFiF,CAAtD;;AAI7B,iCAA+B,CAAC,EAAC,KAAD,EAAQ,GAAG,KAAH,EAAT,EAAoB,EAAE,SAAS,EAAE,EAAF,EAAT,EAAtB,KAA4C;AACzE,WAAO,MAAM,EAAN,CAAP;AADyE,wBAE9D,SAAO,OAAO,KAAP,GAAlB,CAFyE,CAA5C;;AAI/B,2BAAyB,CAAC,EAAC,UAAD,EAAa,GAAG,KAAH,EAAd,EAAyB,EAAE,SAAS,EAAT,EAA3B,KAA4C;AACnE,wBAAW,SAAO,YAAY,CAAC,GAAG,UAAH,EAAe,EAAhB,CAAZ,GAAlB,CADmE,CAA5C;;AAGzB,2BAAyB,CAAC,EAAC,GAAG,KAAH,EAAU,UAAX,EAAD,EAAyB,EAAE,SAAS,EAAT,EAA3B,KAA6C;AACpE,QAAI,OAAO,EAAP,KAAc,QAAd,EAAwB;AAC1B,0BAAW,SAAO,YAAY,EAAZ,GAAlB,CAD0B,CAA5B;;AAGA,UAAM,gBAAgB,CAAC,GAAG,UAAH,CAAjB,CAJ8D;AAKpE,UAAM,QAAQ,cAAc,OAAd,CAAsB,EAAtB,CAAR,CAL8D;AAMpE,QAAI,UAAU,CAAC,CAAD,EAAI;AAChB,oBAAc,MAAd,CAAqB,KAArB,EAA4B,CAA5B,EADgB;AAEhB,0BAAW,SAAO,YAAY,aAAZ,GAAlB,CAFgB,CAAlB;;AAIA,WAAO,KAAP,CAVoE,CAA7C,EAZZ;;AAwBZ;AACD,cAAY,EAAZ;AACE,SAAO,EAAP,EA1BW,CAAf","file":"reducer.js","sourcesContent":["import { handleActions } from 'redux-actions'\nimport { createAction } from 'redux-actions'\n\nexport const ACTIONS = {\n  register: createAction('LAYER_STACK_VIEW_REGISTER', (id, renderFn) => ({ id, renderFn })),\n  unregister: createAction('LAYER_STACK_VIEW_UNREGISTER', (id) => ({ id })),\n  toggle: createAction('LAYER_STACK_VIEW_TOGGLE'),\n  show: createAction('LAYER_STACK_VIEW_SHOW'),\n  hide: createAction('LAYER_STACK_VIEW_HIDE'),\n};\n\nexport default handleActions({\n  'LAYER_STACK_VIEW_REGISTER': ({views, ...state}, { payload: { id, renderFn } }) => {\n    views = {...views, [id]: renderFn };\n    return {...state, views};\n  },\n  'LAYER_STACK_VIEW_UNREGISTER': ({views, ...state}, { payload: { id } }) => {\n    delete views[id]; // mutable for better GC\n    return {...state, views: views};\n  },\n  'LAYER_STACK_VIEW_SHOW': ({displaying, ...state}, { payload: id}) => {\n    return {...state, displaying: [...displaying, id] };\n  },\n  'LAYER_STACK_VIEW_HIDE': ({...state, displaying}, { payload: id }) => {\n    if (typeof id !== 'string') {\n      return {...state, displaying: [] };\n    }\n    const newDisplaying = [...displaying];\n    const index = newDisplaying.indexOf(id);\n    if (index !== -1) {\n      newDisplaying.splice(index, 1);\n      return {...state, displaying: newDisplaying };\n    }\n    return state;\n  },\n}, {\n  displaying: [],\n    views: {},\n});"]}