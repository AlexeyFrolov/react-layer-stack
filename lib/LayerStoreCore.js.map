{"version":3,"sources":["../src/LayerStoreCore.js"],"names":["LayerStoreCore","store","stack","layers","getLayer","bind","getStack","show","hide","update","register","updateFn","unregister","isActive","getIndex","id","layerFn","mountPointId","groups","use","defaultArgs","defaultShow","reset","layer","fn","args","length","indexOf","splice"],"mappings":"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","file":"LayerStoreCore.js","sourcesContent":["import type { ID, LayerFn, Layer, Store, LayerStack, ILayerStore } from './types'\n\nexport default class LayerStoreCore {\n\n  store: Store;\n\n  constructor () {\n    this.store = {\n      stack: [],\n      layers: {},\n    };\n\n    this.getLayer = this.getLayer.bind(this);\n    this.getStack = this.getStack.bind(this);\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n    this.update = this.update.bind(this);\n    this.register = this.register.bind(this);\n    this.updateFn = this.updateFn.bind(this);\n    this.unregister = this.unregister.bind(this);\n    this.isActive = this.isActive.bind(this);\n    this.getIndex = this.getIndex.bind(this);\n  }\n\n  getLayer(id: ID): Layer {\n    return this.store.layers[id];\n  }\n\n  getStack(): LayerStack {\n    return this.store.stack;\n  }\n\n  register (id: ID, layerFn: LayerFn, mountPointId: ID = null,\n            groups: Array<ID> = [], use: Array, defaultArgs: Array = [],\n            defaultShow: Boolean) {\n    this.store.layers[id] = { layerFn, groups, mountPointId, defaultArgs, defaultShow, use };\n    this.reset(id);\n  }\n\n  updateFn (id: ID, layerFn: LayerFn, mountPointId: ID = null,\n            groups: Array<ID> = [], use: Array, defaultArgs: Array = [],\n            defaultShow: Boolean) {\n    const layer = this.getLayer(id);\n    layer.fn = layerFn;\n    layer.use = use;\n    layer.mountPointId = mountPointId;\n    layer.groups = groups;\n    layer.defaultArgs = defaultArgs;\n    layer.defaultShow = defaultShow;\n  }\n\n  reset(id: ID) {\n    const layer = this.store.layers[id];\n    layer.args = layer.defaultArgs;\n    if (layer.defaultShow) {\n      this.show(id);\n    }\n  }\n\n  unregister(id: ID) {\n    delete this.store.layers[id];\n  }\n\n  update(id: ID, args: Array = []) {\n    if (args.length) {\n      this.store.layers[id].args = args;\n    } else {\n      this.store.layers[id].args = this.store.layers[id].defaultArgs;\n    }\n  }\n\n  show (id: ID, args: Array) {\n    const { stack } = this.store;\n    this.update(id, args);\n    if ( id !== stack[stack.length - 1] ) {\n      this.hide(id);\n      this.store.stack = [...stack, id];\n    }\n  }\n\n  hide (id: ID) {\n    const stack = [...this.store.stack];\n    if (-1 !== stack.indexOf(id)) {\n      stack.splice(stack.indexOf(id), 1);\n      this.store.stack = stack;\n    }\n  }\n\n  getIndex(id: ID) {\n    return this.store.stack.indexOf(id);\n  }\n\n  isActive(id: ID) {\n    return this.store.stack.indexOf(id) !== -1;\n  }\n}\n"]}