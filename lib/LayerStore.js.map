{"version":3,"sources":["../src/LayerStore.js"],"names":["LayerStore","_core","_layerSubscriptions","_mountPointsubscriptions","show","bind","hide","update","register","reset","updateFn","unregister","getLayer","getStack","getIndex","isActive","getLayersForMountPoint","id","fn","Set","add","delete","fromIndex","stack","length","i","notifyLayer","forEach","layerFn","mountPointId","defaultArgs","defaultShow","notifyMountPoint","lastMountPoint","args","index","notifyStack"],"mappings":"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","file":"LayerStore.js","sourcesContent":["import type { ID, LayerFn } from './types'\n\nimport LayerStoreCore from './LayerStoreCore'\n\nexport default class LayerStore {\n\n  constructor () {\n    this._core = new LayerStoreCore;\n    this._layerSubscriptions = {};\n    this._mountPointsubscriptions = {};\n\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n    this.update = this.update.bind(this);\n    this.register = this.register.bind(this);\n    this.reset = this.reset.bind(this);\n    this.updateFn = this.updateFn.bind(this);\n    this.unregister = this.unregister.bind(this);\n    this.getLayer = this._core.getLayer;\n    this.getStack = this._core.getStack;\n    this.getIndex = this._core.getIndex;\n    this.isActive = this._core.isActive;\n    this.getLayersForMountPoint = this._core.getLayersForMountPoint;\n  }\n\n  subscribeToLayer(id: ID, fn: Function) {\n    if (typeof this._layerSubscriptions[id] === 'undefined') {\n      this._layerSubscriptions[id] = new Set();\n    }\n    this._layerSubscriptions[id].add(fn);\n    return () => {\n      return this._layerSubscriptions[id].delete(fn);\n    }\n  }\n\n  subscribeToMountPoint(id: ID, fn: Function) {\n    if (typeof this._mountPointsubscriptions[id] === 'undefined') {\n      this._mountPointsubscriptions[id] = new Set();\n    }\n    this._mountPointsubscriptions[id].add(fn);\n    return () => {\n      return this._mountPointsubscriptions[id].delete(fn);\n    }\n  }\n\n  notifyStack(fromIndex) {\n    const stack = this._core.getStack();\n    const { length } = stack;\n    for (let i = fromIndex; i < length; ++i) {\n      this.notifyLayer(stack[i]);\n    }\n  }\n\n  notifyLayer(id: ID) {\n    if (this._layerSubscriptions[id]) {\n      this._layerSubscriptions[id].forEach(fn => fn())\n    }\n  }\n\n  notifyMountPoint(id: ID) {\n    if (this._mountPointsubscriptions[id]) {\n      this._mountPointsubscriptions[id].forEach(fn => fn());\n    }\n  }\n\n  register (id: ID,\n            layerFn: LayerFn,\n            mountPointId = null,\n            defaultArgs = [],\n            defaultShow = false) {\n    this._core.register(id, layerFn, mountPointId, defaultArgs, defaultShow);\n    if (mountPointId) {\n      this.notifyMountPoint(mountPointId);\n    } else {\n      this.notifyLayer(id);\n    }\n  }\n\n  updateFn (id: ID,\n            layerFn: LayerFn,\n            mountPointId: ID = null,\n            defaultArgs: Array = [],\n            defaultShow: Boolean) {\n    const lastMountPoint = this.getLayer(id).mountPointId;\n    this._core.updateFn(id, layerFn, mountPointId, defaultArgs, defaultShow);\n    if (lastMountPoint !== mountPointId) {\n      this.notifyMountPoint(lastMountPoint);\n      this.notifyMountPoint(mountPointId);\n    } else {\n      this.notifyLayer(id);\n    }\n  }\n\n  reset(id: ID) {\n    this._core.reset(id);\n    this.notifyLayer(id)\n  }\n\n  unregister(id: ID) {\n    this._core.unregister(id);\n  }\n\n  show (id: ID, args: Array) {\n    const index = this.getIndex(id);\n    this._core.show(id, args);\n    this.notifyStack(index);\n  }\n\n  update(id: ID, args: Array) {\n    this._core.update(id, args);\n    this.notifyLayer(id);\n  }\n\n  hide (id: ID) {\n    const index = this.getIndex(id);\n    this._core.hide(id);\n    this.notifyLayer(id);\n    this.notifyStack(index);\n  }\n}"]}