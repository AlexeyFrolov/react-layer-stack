{"version":3,"sources":["../../src/components/Layer.js"],"names":["Layer","props","context","layerStore","id","children","to","register","defaultArgs","defaultShow","updateFn","defaultProps","elementType","contextTypes","object"],"mappings":"gnBAAA,8B;AACA,6C;AACA,oD;;;;AAIqBA,K;;;;;;;;;;AAUnB,iBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AACpBD,SADoB,EACbC,OADa;AAE1B,UAAKC,UAAL,GAAkBD,QAAQC,UAA1B,CAF0B;AAG3B,G;;AAEoB;AACU,WAAKF,KADf,KACXG,EADW,UACXA,EADW,KACPC,QADO,UACPA,QADO,KACGC,EADH,UACGA,EADH;AAEnB,WAAKH,UAAL,CAAgBI,QAAhB,CAAyBH,EAAzB,EAA6BC,QAA7B,EAAuCC,EAAvC,EAA2C,KAAKL,KAAL,CAAWO,WAAtD,EAAmE,KAAKP,KAAL,CAAWQ,WAA9E;AACD,K;;AAEmE,SAA9CL,EAA8C,QAA9CA,EAA8C,KAA1CC,QAA0C,QAA1CA,QAA0C,KAAhCC,EAAgC,QAAhCA,EAAgC,KAA5BE,WAA4B,QAA5BA,WAA4B,KAAfC,WAAe,QAAfA,WAAe;AAClE,WAAKN,UAAL,CAAgBO,QAAhB,CAAyBN,EAAzB,EAA6BC,QAA7B,EAAuCC,EAAvC,EAA2CE,WAA3C,EAAwDC,WAAxD;AACD,K;;AAEsB;AACrB,WAAKN,UAAL,GAAkB,IAAlB;AACD,K;;AAEQ;AACY,WAAKF,KADjB,KACCG,EADD,WACCA,EADD,KACKE,EADL,WACKA,EADL;AAEP,UAAI,CAACA,EAAL,EAAS;AACP,eAAO,qDAA+B,EAAEF,MAAF,EAA/B,CAAP;AACD;AACD,aAAO,IAAP;AACD,K,wDAlCkBJ,K;;;AAqCrBA,MAAMW,YAAN,GAAqB;AACnBC,eAAa,MADM,EAArB;;;AAIAZ,MAAMa,YAAN,GAAqB;AACnBV,cAAY,iBAAUW,MADH,EAArB","file":"Layer.js","sourcesContent":["import React, { Component, PropTypes, createElement} from 'react';\nimport LayerStore from './../LayerStore';\nimport LayerMountPoint from './LayerMountPoint';\n\nimport type { ID, LayerFn } from './../types'\n\nexport default class Layer extends Component {\n\n  props: {\n    id: ID,\n    children: LayerFn,\n    to: ?ID,\n  };\n\n  layerStore: LayerStore;\n\n  constructor(props, context) {\n    super(props, context);\n    this.layerStore = context.layerStore;\n  }\n\n  componentWillMount() {\n    const { id, children, to } = this.props;\n    this.layerStore.register(id, children, to, this.props.defaultArgs, this.props.defaultShow);\n  }\n\n  componentWillUpdate({ id, children, to, defaultArgs, defaultShow }) {\n    this.layerStore.updateFn(id, children, to, defaultArgs, defaultShow);\n  }\n\n  componentWillUnmount() {\n    this.layerStore = null;\n  }\n\n  render() {\n    const { id, to } = this.props;\n    if (!to) {\n      return createElement(LayerMountPoint, { id });\n    }\n    return null;\n  }\n}\n\nLayer.defaultProps = {\n  elementType: 'span'\n};\n\nLayer.contextTypes = {\n  layerStore: PropTypes.object\n};"]}