{"version":3,"sources":["../../src/components/LayerToggle.js"],"names":["LayerToggle","props","context","unsubscribe","layerStore","subscribeToLayer","for","setTimeout","setState","children","show","hide","stack","getStack","isActive","indexOf","args","getLayer","Component","contextTypes","PropTypes","object"],"mappings":"gnBAAA,8B;AACA,uC;AACA,6C;;AAEqBA,W;;;;AAInB,uBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AACpBD,SADoB,EACbC,OADa;AAE1B,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,UAAL,GAAkBF,QAAQE,UAA1B,CAH0B;AAI3B,G;;AAEoB;AACnB,WAAKD,WAAL,GAAmB,KAAKC,UAAL,CAAgBC,gBAAhB,CAAiC,KAAKJ,KAAL,CAAWK,GAA5C,EAAiD,YAAM;AACxEC,mBAAW,oBAAM,OAAKC,QAAL,CAAc,EAAd,CAAN,EAAX,EAAoC,GAApC;AACD,OAFkB,CAAnB;AAGD,K;;AAEsB;AACrB,WAAKL,WAAL;AACA,WAAKA,WAAL,GAAmB,IAAnB;AACA,WAAKC,UAAL,GAAkB,IAAlB;AACD,K;;AAES;AACuB,WAAKH,KAD5B,CACAQ,QADA,UACAA,QADA,CACaR,KADb;AAEe,WAAKG,UAFpB,CAEAM,KAFA,eAEAA,IAFA,CAEMC,KAFN,eAEMA,IAFN;AAGR,UAAMC,QAAQ,KAAKR,UAAL,CAAgBS,QAAhB,EAAd;AACA,aAAOJ,2BAAS;AACdG,oBADc;AAEdE,kBAAUF,MAAMG,OAAN,CAAcd,MAAMK,GAApB,MAA6B,CAAC,CAF1B;AAGdI,cAAM,mDAAIM,IAAJ,gDAAIA,IAAJ,iCAAaf,MAAMK,GAAN,GAAYI,MAAKT,MAAMK,GAAX,EAAgBU,IAAhB,CAAZ,GAAoCN,MAAKM,IAAL,CAAjD,EAHQ;AAIdL,cAAM,wBAAaV,MAAMK,GAAN,GAAYK,MAAKV,MAAMK,GAAX,CAAZ,GAA8BK,OAA3C,EAJQ,EAAT;AAKD,WAAKP,UAAL,CAAgBa,QAAhB,CAAyBhB,MAAMK,GAA/B,EAAoCU,IALnC,GAAP;AAMD,K,0BAhCsCE,gB,oBAApBlB,W;;;AAmCrBA,YAAYmB,YAAZ,GAA2B;AACzBf,cAAYgB,oBAAUC,MADG,EAA3B","file":"LayerToggle.js","sourcesContent":["import React, { Component, createElement} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LayerStore from './../LayerStore';\r\n\r\nexport default class LayerToggle extends Component {\r\n\r\n  layerStore: LayerStore;\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.unsubscribe = null;\r\n    this.layerStore = context.layerStore;\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.unsubscribe = this.layerStore.subscribeToLayer(this.props.for, () => {\r\n      setTimeout(() => this.setState({}), 100 );\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n    this.unsubscribe = null;\r\n    this.layerStore = null;\r\n  }\r\n\r\n  render () {\r\n    const { children, ...props } = this.props;\r\n    const { show, hide } = this.layerStore;\r\n    const stack = this.layerStore.getStack();\r\n    return children({\r\n      stack,\r\n      isActive: stack.indexOf(props.for) !== -1,\r\n      show: (...args) => props.for ? show(props.for, args) : show(args),\r\n      hide: (...args) => props.for ? hide(props.for) : hide(),\r\n    }, ...this.layerStore.getLayer(props.for).args);\r\n  }\r\n}\r\n\r\nLayerToggle.contextTypes = {\r\n  layerStore: PropTypes.object\r\n};\r\n"]}