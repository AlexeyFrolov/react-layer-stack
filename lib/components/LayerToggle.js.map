{"version":3,"sources":["../../src/components/LayerToggle.js"],"names":["LayerToggle","props","context","unsubscribe","layerStore","subscribeToLayer","for","setState","children","show","hide","stack","getStack","isActive","indexOf","args","id","toggle","_id","reset","getLayer","contextTypes","object"],"mappings":"gnBAAA,8B;AACA,6C;;;;AAIqBA,W;;;;;;;;;AASnB,uBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AACpBD,SADoB,EACbC,OADa;AAE1B,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,UAAL,GAAkBF,QAAQE,UAA1B,CAH0B;AAI3B,G;;AAEoB;AACnB,WAAKD,WAAL,GAAmB,KAAKC,UAAL,CAAgBC,gBAAhB,CAAiC,KAAKJ,KAAL,CAAWK,GAA5C,EAAiD,YAAM;AACxE,eAAKC,QAAL,CAAc,EAAd;AACD,OAFkB,CAAnB;AAGD,K;;AAEsB;AACrB,WAAKJ,WAAL;AACA,WAAKA,WAAL,GAAmB,IAAnB;AACA,WAAKC,UAAL,GAAkB,IAAlB;AACD,K;;AAES;AACuB,WAAKH,KAD5B,KACAO,QADA,UACAA,QADA,KACaP,KADb;AAEe,WAAKG,UAFpB,KAEAK,KAFA,eAEAA,IAFA,KAEMC,KAFN,eAEMA,IAFN;AAGR,UAAMC,QAAQ,KAAKP,UAAL,CAAgBQ,QAAhB,EAAd;AACA,aAAOJ,2BAAS;AACdG,oBADc;AAEdE,kBAAUF,MAAMG,OAAN,CAAcb,MAAMK,GAApB,MAA6B,CAAC,CAF1B;AAGdG,cAAM,mDAAIM,IAAJ,gDAAIA,IAAJ,iCAAad,MAAMK,GAAN,GAAYG,MAAKR,MAAMK,GAAX,EAAgBS,IAAhB,CAAZ,GAAoCN,MAAKM,IAAL,CAAjD,EAHQ;AAIdL,cAAM,qBAACM,EAAD,uEAAM,IAAN,QAAef,MAAMK,GAAN,GAAYI,MAAKT,MAAMK,GAAX,CAAZ,GAA8BI,MAAKM,EAAL,CAA7C,EAJQ;AAKdC,gBAAQ,gBAACC,GAAD,EAAS;AACf,cAAMF,KAAKf,MAAMK,GAAN,GAAYL,MAAMK,GAAlB,GAAwBY,GAAnC;AACAP,gBAAMG,OAAN,CAAcb,MAAMK,GAApB,MAA6B,CAAC,CAA9B,GAAkCI,MAAKM,EAAL,CAAlC,GAA6CP,MAAKO,EAAL,CAA7C;AACD,SARa;AASdG,qKAAO,UAACH,EAAD,UAAQf,MAAMK,GAAN,GAAYa,MAAMlB,MAAMK,GAAZ,CAAZ,GAA+Ba,MAAMH,EAAN,CAAvC,EAAP,CATc,EAAT;AAUD,WAAKZ,UAAL,CAAgBgB,QAAhB,CAAyBnB,MAAMK,GAA/B,EAAoCS,IAVnC,GAAP;AAWD,K,8DA1CkBf,W;;;AA6CrBA,YAAYqB,YAAZ,GAA2B;AACzBjB,cAAY,iBAAUkB,MADG,EAA3B","file":"LayerToggle.js","sourcesContent":["import React, { Component, PropTypes, createElement} from 'react'\nimport LayerStore from './../LayerStore'\n\nimport type { ID, LayerFn } from './../types'\n\nexport default class LayerToggle extends Component {\n\n  layerStore: LayerStore;\n\n  props: {\n    for: ID,\n    children: LayerFn,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.unsubscribe = null;\n    this.layerStore = context.layerStore;\n  }\n\n  componentWillMount() {\n    this.unsubscribe = this.layerStore.subscribeToLayer(this.props.for, () => {\n      this.setState({});\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n    this.unsubscribe = null;\n    this.layerStore = null;\n  }\n\n  render () {\n    const { children, ...props } = this.props;\n    const { show, hide } = this.layerStore;\n    const stack = this.layerStore.getStack();\n    return children({\n      stack,\n      isActive: stack.indexOf(props.for) !== -1,\n      show: (...args) => props.for ? show(props.for, args) : show(args),\n      hide: (id = null) => props.for ? hide(props.for) : hide(id),\n      toggle: (_id) => {\n        const id = props.for ? props.for : _id;\n        stack.indexOf(props.for) !== -1 ? hide(id) : show(id);\n      },\n      reset: (id) => props.for ? reset(props.for) : reset(id),\n    }, ...this.layerStore.getLayer(props.for).args);\n  }\n}\n\nLayerToggle.contextTypes = {\n  layerStore: PropTypes.object\n};"]}