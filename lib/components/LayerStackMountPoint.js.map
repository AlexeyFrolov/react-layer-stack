{"version":3,"sources":["../../src/components/LayerStackMountPoint.js"],"names":["LayerStackMountPoint","props","context","unsubscribe","layerStore","subscribeToMountPoint","id","setState","mountPointId","elementType","wrapperClass","wrapperActiveClass","layerItemClass","layersForMountPoint","getLayersForMountPoint","wrapperClassName","length","className","map","key","LayerMountPoint","Component","contextTypes","PropTypes","object","defaultProps"],"mappings":"gnBAAA,8B;AACA,uC;AACA,oD;AACA,6C;;AAEqBA,oB;;;;AAInB,gCAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AACpBD,SADoB,EACbC,OADa;AAE1B,UAAKC,WAAL,GAAmBD,QAAQE,UAAR,CAAmBC,qBAAnB,CAAyCJ,MAAMK,EAA/C,EAAmD,YAAM;AAC1E,YAAKC,QAAL,CAAc,EAAd;AACD,KAFkB,CAAnB;AAGA,UAAKH,UAAL,GAAkBF,QAAQE,UAA1B,CAL0B;AAM3B,G;;AAEsB;AACrB,WAAKD,WAAL;AACA,WAAKA,WAAL,GAAmB,IAAnB;AACA,WAAKC,UAAL,GAAkB,IAAlB;AACD,K;;AAEQ;AACqF,WAAKH,KAD1F,CACKO,YADL,UACCF,EADD,CACmBG,WADnB,UACmBA,WADnB,CACgCC,YADhC,UACgCA,YADhC,CAC8CC,kBAD9C,UAC8CA,kBAD9C,CACkEC,cADlE,UACkEA,cADlE;AAEP,UAAMC,sBAAsB,KAAKT,UAAL,CAAgBU,sBAAhB,CAAuCN,YAAvC,CAA5B;AACA,UAAMO,mBAAmBL,eAAeA,gBAAgBG,oBAAoBG,MAApB,GAA6B,MAAML,kBAAnC,GAAwD,EAAxE,CAAf,GAA6F,EAAtH;AACA,aAAO,0BAAcF,WAAd,EAA2B,EAAEQ,WAAWF,gBAAb,EAA3B,EAA4D,KAAKX,UAAL,CAAgBU,sBAAhB,CAAuCN,YAAvC;AAChEU,SADgE,CAC5D,UAACZ,EAAD,UAAQ,0BAAcG,WAAd,EAA2B,EAAEU,KAAKb,EAAP,EAAWW,WAAWL,cAAtB,EAA3B;AACX,kCAAcQ,yBAAd,EAA+B,EAAEd,MAAF,EAA/B,CADW,CAAR,EAD4D,CAA5D,CAAP;AAGD,K,mCAzB+Ce,gB,oBAA7BrB,oB;;;AA4BrBA,qBAAqBsB,YAArB,GAAoC;AAClClB,cAAYmB,oBAAUC,MADY,EAApC;;;AAIAxB,qBAAqByB,YAArB,GAAoC;AAClChB,eAAa,MADqB;AAElCC,gBAAc,EAFoB;AAGlCC,sBAAoB,EAHc;AAIlCC,kBAAgB,EAJkB,EAApC","file":"LayerStackMountPoint.js","sourcesContent":["import React, { Component, createElement} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LayerMountPoint from './LayerMountPoint';\r\nimport LayerStore from './../LayerStore'\r\n\r\nexport default class LayerStackMountPoint extends Component {\r\n\r\n  layerStore: LayerStore;\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.unsubscribe = context.layerStore.subscribeToMountPoint(props.id, () => {\r\n      this.setState({})\r\n    });\r\n    this.layerStore = context.layerStore;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n    this.unsubscribe = null;\r\n    this.layerStore = null;\r\n  }\r\n\r\n  render() {\r\n    const { id: mountPointId, elementType, wrapperClass, wrapperActiveClass, layerItemClass } = this.props;\r\n    const layersForMountPoint = this.layerStore.getLayersForMountPoint(mountPointId);\r\n    const wrapperClassName = wrapperClass ? wrapperClass + (layersForMountPoint.length ? ' ' + wrapperActiveClass : '') : '';\r\n    return createElement(elementType, { className: wrapperClassName }, this.layerStore.getLayersForMountPoint(mountPointId)\r\n      .map((id) => createElement(elementType, { key: id, className: layerItemClass },\r\n        createElement(LayerMountPoint, { id }))))\r\n  }\r\n}\r\n\r\nLayerStackMountPoint.contextTypes = {\r\n  layerStore: PropTypes.object\r\n};\r\n\r\nLayerStackMountPoint.defaultProps = {\r\n  elementType: 'span',\r\n  wrapperClass: '',\r\n  wrapperActiveClass: '',\r\n  layerItemClass: ''\r\n};\r\n"]}